const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/keys');
const mongoose = require('mongoose'); 

const User  = mongoose.model('users'); 

passport.serializeUser((user, done) => {
    // uses the id and sets a cookie
    done(null, user.id); // id --> the autogenerated __id by mongo
});

passport.deserializeUser((userID, done) => {
    // use the cookie and turn it into a user item by looking into mongodb
    User.findById(userID)
        .then(user => {
            done(null, user);
        });
});

passport.use(
    new GoogleStrategy({
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback'
    }, 
    (accessToken, refreshToken, profile, done) => {
        // console.log('accessToken:', accessToken);
        // console.log('refreshToken:', refreshToken);
        // console.log('profile:', profile);
        // console.log('done:', done);
        User.findOne({ googleID: profile.id })
            .then((existingUser) => {
                if (existingUser) {
                    // first arg: error; second arg: user record
                    done(null, existingUser);
                } else {
                    new User(
                        { 
                            googleID: profile.id, 
                        })
                        .save()
                        .then(user => done(null, user));
                }
            });
    })
);